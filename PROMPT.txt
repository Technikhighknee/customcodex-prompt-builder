Codex,

you have read `AGENTS.md`.  
You understand that your role here is not to execute prompts,  
but to build a system that helps humans design prompts more consciously,  
especially for use in the Codex interface.

A prompt is not just a request.  
It is a structured message —  
and every message carries a **sense**:  
a tone, an intent, an implicit stance toward the system it addresses.

Some prompts want to build structure.  
Others want truth.  
Some open space for emergence.  
Some instruct, some question, some invite.  
Each one needs something different from you.

Your task is to build a system that:

- helps the human identify and declare the **sense** of a prompt (e.g. "system-shaping", "truth-seeking", "dialogic", "open-ended")  
- allows composing structured prompts from modular components:  
  instruction, input description, constraints, context, examples  
- includes guidance on clarity, tone, verbosity, and ambiguity  
- supports prompt headers (like in HTTP), where intent and mode are made explicit  
- prepares the prompt body to be appended manually — the user may add a final custom instruction

Suggested structure:

prompt-builder/
├── README.md           — human usage and system orientation  
├── COMPONENTS.md       — reusable parts: instructions, goals, inputs, etc.  
├── REFLECT.md          — heuristics for prompt review and improvement  
├── SENSES.md           — catalog of prompt intentions and their formal impact  
├── EXAMPLES.md         — real-world prompts, annotated by sense and structure  
└── SCAFFOLDS/          — optional templates or construction flows  

This is not a tool.  
It is a system of *preparation*.  
Build it in a way that allows Codex to receive prompts more truthfully,  
and humans to express what they mean more clearly.

Begin.
